(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>m});var o=t(354),r=t.n(o),a=t(314),i=t.n(a),A=t(417),c=t.n(A),s=new URL(t(336),t.b),p=new URL(t(26),t.b),l=new URL(t(298),t.b),d=i()(r());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]);var u=c()(s),f=c()(p),C=c()(l);d.push([n.id,`@font-face {\n  font-family: 'whocats';\n  src: url(${u});\n}\n@font-face {\n  font-family: 'pacifico';\n  src: url(${f});\n}\n\nbody {\n  font-family: pacifico, Arial, Helvetica, sans-serif;\n  margin: 0;\n  padding: 0;\n  height: 100vh;\n  background-image: url(${C});\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n}\n\nh1 {\n  font-family: 'whocats';\n  color: #5c487a;\n}\n\n.app {\n  background-color: #c7cf9d;\n  display: flex;\n  justify-content: space-between;\n  padding: 25px;\n}\n\n.app img {\n  width: 45px;\n}\n\na {\n  text-decoration: none;\n  font-weight: bold;\n  color: #5c487a;\n}\n\nul {\n  display: flex;\n  gap: 18px;\n  list-style: none;\n}\n\n/* form */\nform {\n  width: 40%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n}\n\ninput {\n  flex: 1;\n  padding: 10px 20px;\n  font-size: 17px;\n  outline: none;\n  border: none;\n  border-radius: 20px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\nbutton {\n  padding: 10px;\n  border: none;\n  border-radius: 20px;\n  color: #8368ac;\n  font-weight: bold;\n  cursor: pointer;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\nbutton:hover {\n  background-color: #8368ac;\n  color: white;\n  transition: 0.2s;\n}\n\n/* main section */\n\n.initial {\n  text-align: center;\n  background-color: #c7cf9d;\n  width: 50%;\n  color: black;\n  padding: 60px 10px;\n  border-radius: 20px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\n.initial h1 {\n  color: black;\n}\n\nmain {\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 100px;\n}\n\n.weather-container {\n  font-family: 'Nunito', sans-serif;\n  background-color: #46493a;\n  color: white;\n  font-size: 20px;\n  letter-spacing: 2px;\n  width: 34%;\n  padding: 30px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\n.weather-container h3 {\n  font-family: 'Arial', Arial, sans-serif, Helvetica, sans-serif;\n  font-weight: bold;\n  text-decoration: underline;\n  text-shadow: 1px 1px 3px purple;\n}\n\n.gif-weather {\n  width: 34%;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\np {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n}\n\nimg {\n  width: 40px;\n}\n\nfooter {\n  background-color: black;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n}\n\nfooter a {\n  color: white;\n  text-decoration: underline;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,sBAAsB;EACtB,4CAA+B;AACjC;AACA;EACE,uBAAuB;EACvB,4CAAwC;AAC1C;;AAEA;EACE,mDAAmD;EACnD,SAAS;EACT,UAAU;EACV,aAAa;EACb,yDAAqD;EACrD,4BAA4B;EAC5B,sBAAsB;EACtB,aAAa;EACb,iCAAiC;AACnC;;AAEA;EACE,sBAAsB;EACtB,cAAc;AAChB;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,8BAA8B;EAC9B,aAAa;AACf;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,gBAAgB;AAClB;;AAEA,SAAS;AACT;EACE,UAAU;EACV,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,OAAO;EACP,kBAAkB;EAClB,eAAe;EACf,aAAa;EACb,YAAY;EACZ,mBAAmB;EACnB,0CAA0C;AAC5C;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,mBAAmB;EACnB,cAAc;EACd,iBAAiB;EACjB,eAAe;EACf,0CAA0C;AAC5C;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,gBAAgB;AAClB;;AAEA,iBAAiB;;AAEjB;EACE,kBAAkB;EAClB,yBAAyB;EACzB,UAAU;EACV,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;EACnB,0CAA0C;AAC5C;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,UAAU;AACZ;;AAEA;EACE,iCAAiC;EACjC,yBAAyB;EACzB,YAAY;EACZ,eAAe;EACf,mBAAmB;EACnB,UAAU;EACV,aAAa;EACb,mBAAmB;EACnB,0CAA0C;AAC5C;;AAEA;EACE,8DAA8D;EAC9D,iBAAiB;EACjB,0BAA0B;EAC1B,+BAA+B;AACjC;;AAEA;EACE,UAAU;EACV,mBAAmB;EACnB,0CAA0C;AAC5C;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,QAAQ;AACV;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,0BAA0B;AAC5B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap');\n\n@font-face {\n  font-family: 'whocats';\n  src: url('./fonts/Whocats.ttf');\n}\n@font-face {\n  font-family: 'pacifico';\n  src: url('./fonts/Pacifico-Regular.ttf');\n}\n\nbody {\n  font-family: pacifico, Arial, Helvetica, sans-serif;\n  margin: 0;\n  padding: 0;\n  height: 100vh;\n  background-image: url('./icons/background-image.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n}\n\nh1 {\n  font-family: 'whocats';\n  color: #5c487a;\n}\n\n.app {\n  background-color: #c7cf9d;\n  display: flex;\n  justify-content: space-between;\n  padding: 25px;\n}\n\n.app img {\n  width: 45px;\n}\n\na {\n  text-decoration: none;\n  font-weight: bold;\n  color: #5c487a;\n}\n\nul {\n  display: flex;\n  gap: 18px;\n  list-style: none;\n}\n\n/* form */\nform {\n  width: 40%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n}\n\ninput {\n  flex: 1;\n  padding: 10px 20px;\n  font-size: 17px;\n  outline: none;\n  border: none;\n  border-radius: 20px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\nbutton {\n  padding: 10px;\n  border: none;\n  border-radius: 20px;\n  color: #8368ac;\n  font-weight: bold;\n  cursor: pointer;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\nbutton:hover {\n  background-color: #8368ac;\n  color: white;\n  transition: 0.2s;\n}\n\n/* main section */\n\n.initial {\n  text-align: center;\n  background-color: #c7cf9d;\n  width: 50%;\n  color: black;\n  padding: 60px 10px;\n  border-radius: 20px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\n.initial h1 {\n  color: black;\n}\n\nmain {\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 100px;\n}\n\n.weather-container {\n  font-family: 'Nunito', sans-serif;\n  background-color: #46493a;\n  color: white;\n  font-size: 20px;\n  letter-spacing: 2px;\n  width: 34%;\n  padding: 30px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\n.weather-container h3 {\n  font-family: 'Arial', Arial, sans-serif, Helvetica, sans-serif;\n  font-weight: bold;\n  text-decoration: underline;\n  text-shadow: 1px 1px 3px purple;\n}\n\n.gif-weather {\n  width: 34%;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n}\n\np {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n}\n\nimg {\n  width: 40px;\n}\n\nfooter {\n  background-color: black;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n}\n\nfooter a {\n  color: white;\n  text-decoration: underline;\n}\n"],sourceRoot:""}]);const m=d},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var p=[].concat(n[s]);o&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=o.base?c[0]+o.base:c[0],p=a[s]||0,l="".concat(s," ").concat(p);a[s]=p+1;var d=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var f=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=o(n,r),s=0;s<a.length;s++){var p=t(a[s]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=c}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},26:(n,e,t)=>{n.exports=t.p+"c0d735fc04154e03a691.ttf"},336:(n,e,t)=>{n.exports=t.p+"896dddc01fb6bdf4dfa6.ttf"},298:(n,e,t)=>{n.exports=t.p+"images/9f3b6d92cc24be2f0ea0.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),r=t.n(o),a=t(659),i=t.n(a),A=t(56),c=t.n(A),s=t(540),p=t.n(s),l=t(113),d=t.n(l),u=t(208),f={};f.styleTagTransform=d(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=p(),e()(u.A,f),u.A&&u.A.locals&&u.A.locals;const C=t.p+"images/b972dcf61eb381f03551.png",m=t.p+"images/f009e441a604361a2783.png",E=t.p+"images/a6d0b7d87d2022baaf47.png",g=document.querySelector("main"),h=document.querySelector("#search-btn"),x=document.querySelector("#locationInput"),b=document.createElement("div");b.classList.add("weather-container"),h.addEventListener("click",(n=>{n.preventDefault(),async function(n){try{const e=await fetch(`https://api.weatherapi.com/v1/current.json?key=50a4dd9ae6634d29ac964023243006&q=${n}`,{mode:"cors"});if(!e.ok)throw alert("Location Not Found!"),new Error(`Status: ${e.status} Location Not Found!`);const t=await async function(n){const e=await n.json();return{location:e.location.name,weatherCondition:e.current.condition.text,temperature:e.current.temp_c,feelsLike:e.current.feelslike_c,humidity:e.current.humidity,cloud:e.current.cloud,precip_mm:e.current.precip_mm}}(e);console.log(t),async function(n){for(;g.firstChild;)g.removeChild(g.firstChild);for(;b.firstChild;)b.removeChild(b.firstChild);const e=document.createElement("h3"),t=document.createElement("p"),o=document.createElement("p"),r=document.createElement("p"),a=document.createElement("p"),i=document.createElement("img");n.precip_mm>0?(i.src=m,b.style.backgroundColor="#374151"):0===n.cloud?(i.src=C,b.style.backgroundColor="#a8861a"):n.cloud>0&&(i.src=E,b.style.backgroundColor="#52525b"),e.textContent=`City: ${n.location}`,t.textContent=n.weatherCondition,o.textContent=`Temperature: ${n.temperature}°C`,r.textContent=`Feels Like: ${n.feelsLike}°C`,a.textContent=`Humidity: ${n.humidity}%`;const A=document.createElement("img"),c=await async function(n){try{const e=await fetch(`https://api.giphy.com/v1/gifs/translate?api_key=CSniBsj4zN6xRpbs3LJnJwF34GBQ7oRx&s=${n}`,{mode:"cors"});if(!e.ok)throw new Error(`Error Status: ${e.status}`);return(await e.json()).data.images.original.url}catch(n){console.log(n)}}(n.weatherCondition);A.className="gif-weather",A.src=c,b.classList.add("active"),t.insertBefore(i,t.firstChild),b.append(e,t,o,r,a),g.append(b,A)}(t)}catch(n){console.log(n)}}(x.value)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,